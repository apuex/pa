package com.github.apuex.pa.mhs.impl;

import org.junit.Assert;
import org.junit.Test;

public class PAAlarmTest {
  @Test
  public void testEncodePAAlarm() {
    byte[] expected = new byte[]{
        (byte)0x04, (byte)0x00, (byte)0x11, (byte)0x00, (byte)0x74, (byte)0xC9, (byte)0x02, (byte)0x00,
        (byte)0x13, (byte)0x00, (byte)0x00, (byte)0x00, (byte)0x36, (byte)0x32, (byte)0x36, (byte)0x31,
        (byte)0x2E, (byte)0x38, (byte)0x30, (byte)0x39, (byte)0x38, (byte)0x2E, (byte)0x38, (byte)0x36,
        (byte)0x36, (byte)0x34, (byte)0x2E, (byte)0x39, (byte)0x34, (byte)0x37, (byte)0x35, (byte)0x00,
        (byte)0x01, (byte)0x00, (byte)0x00, (byte)0x00, (byte)0x38, (byte)0x91, (byte)0xD6, (byte)0x62,
        (byte)0x00, (byte)0x00, (byte)0x00, (byte)0x00, (byte)0x01, (byte)0x00, (byte)0x00, (byte)0x00,
        (byte)0x01, (byte)0x00, (byte)0x00, (byte)0x00, (byte)0x00, (byte)0x00, (byte)0x00, (byte)0x00,
        (byte)0x00, (byte)0x00, (byte)0x00, (byte)0x00, (byte)0x00, (byte)0x00, (byte)0x00, (byte)0x00,
        (byte)0x00, (byte)0x00, (byte)0x00, (byte)0x00, (byte)0x12, (byte)0x00, (byte)0x00, (byte)0x00,
        (byte)0xD0, (byte)0xEE, (byte)0xB5, (byte)0xE7, (byte)0xB3, (byte)0xD8, (byte)0xD7, (byte)0xDC,
        (byte)0xB5, (byte)0xE7, (byte)0xD1, (byte)0xB9, (byte)0xD7, (byte)0xB4, (byte)0xCC, (byte)0xAC,
        (byte)0xA3, (byte)0xA1, (byte)0x00, (byte)0x1C, (byte)0x00, (byte)0x00, (byte)0x00, (byte)0x55,
        (byte)0x50, (byte)0x53, (byte)0xC9, (byte)0xE8, (byte)0xB1, (byte)0xB8, (byte)0x31, (byte)0xA3,
        (byte)0xDB, (byte)0xB0, (byte)0xAC, (byte)0xC4, (byte)0xAC, (byte)0xC9, (byte)0xFA, (byte)0xA3,
        (byte)0xDD, (byte)0xA3, (byte)0xA8, (byte)0x54, (byte)0x44, (byte)0x42, (byte)0x4F, (byte)0x53,
        (byte)0x53, (byte)0xA3, (byte)0xA9, (byte)0x00, (byte)0x04, (byte)0x00, (byte)0x00, (byte)0x00,
        (byte)0x1D, (byte)0x00, (byte)0x00, (byte)0x00, (byte)0xB9, (byte)0xE3, (byte)0xD6, (byte)0xDD,
        (byte)0xB7, (byte)0xAC, (byte)0xD8, (byte)0xAE, (byte)0xC7, (byte)0xE5, (byte)0xBA, (byte)0xD3,
        (byte)0xB6, (byte)0xAB, (byte)0x33, (byte)0xBA, (byte)0xC5, (byte)0x2E, (byte)0xC2, (byte)0xA5,
        (byte)0x35, (byte)0x46, (byte)0x2E, (byte)0xCA, (byte)0xFD, (byte)0xBE, (byte)0xDD, (byte)0x30,
        (byte)0x33, (byte)0x00, (byte)0x00, (byte)0x00, (byte)0x00, (byte)0x00, (byte)0x04, (byte)0x00,
        (byte)0x00, (byte)0x00, (byte)0xB8, (byte)0xE6, (byte)0xBE, (byte)0xAF, (byte)0x00, (byte)0x01,
        (byte)0x00, (byte)0x00, (byte)0x00, (byte)0x98, (byte)0xF5, (byte)0x53, (byte)0x00, (byte)0x03,
        (byte)0x00, (byte)0x00, (byte)0x00, (byte)0x00, (byte)0x00, (byte)0x00, (byte)0x00, (byte)0x00,
        (byte)0x00, (byte)0x00, (byte)0x00, (byte)0x00, (byte)0x00, (byte)0x00, (byte)0x00, (byte)0x00,
        (byte)0x00, (byte)0x00, (byte)0x00, (byte)0x00, (byte)0x00, (byte)0x00, (byte)0x00, (byte)0x00,
        (byte)0x00, (byte)0x00, (byte)0x00, (byte)0x00, (byte)0x00, (byte)0x00, (byte)0x00, (byte)0x00,
        (byte)0x00, (byte)0x00, (byte)0x00, (byte)0x00, (byte)0x00, (byte)0x00, (byte)0x00, (byte)0x00,
        (byte)0x00, (byte)0x00, (byte)0x00
    };
    PAAlarm input = new PAAlarm();
    input.setDwId(182644);
    input.setIdList("6261.8098.8664.9475");
    input.setDataType(1);
    input.setRiseTime(0x62D69138);
    input.setState(1);
    input.setDIValue(1);
    input.setFValue(0);
    input.setDataObjectName("蓄电池总电压状态！");
    input.setDeviceName("UPS设备1［艾默生］（TDBOSS）");
    input.setDeviceType(4);
    input.setStation("广州番禺清河东3号.楼5F.数据03");
    input.setNote("告警");
    input.setRise(1);
    input.setLasting(5502360);
    input.setAlarmLevel(3);
    input.setEndTim(0);
    input.setConfTime(0);
    byte[] output = input.classToByte();
    Assert.assertArrayEquals(expected, output);
  }

  @Test
  public void testDecodePAAlarm() {
    byte[] input = new byte[]{
        (byte)0x04, (byte)0x00, (byte)0x11, (byte)0x00, (byte)0x74, (byte)0xC9, (byte)0x02, (byte)0x00,
        (byte)0x13, (byte)0x00, (byte)0x00, (byte)0x00, (byte)0x36, (byte)0x32, (byte)0x36, (byte)0x31,
        (byte)0x2E, (byte)0x38, (byte)0x30, (byte)0x39, (byte)0x38, (byte)0x2E, (byte)0x38, (byte)0x36,
        (byte)0x36, (byte)0x34, (byte)0x2E, (byte)0x39, (byte)0x34, (byte)0x37, (byte)0x35, (byte)0x00,
        (byte)0x01, (byte)0x00, (byte)0x00, (byte)0x00, (byte)0x38, (byte)0x91, (byte)0xD6, (byte)0x62,
        (byte)0x00, (byte)0x00, (byte)0x00, (byte)0x00, (byte)0x01, (byte)0x00, (byte)0x00, (byte)0x00,
        (byte)0x01, (byte)0x00, (byte)0x00, (byte)0x00, (byte)0x00, (byte)0x00, (byte)0x00, (byte)0x00,
        (byte)0x00, (byte)0x00, (byte)0x00, (byte)0x00, (byte)0x00, (byte)0x00, (byte)0x00, (byte)0x00,
        (byte)0x00, (byte)0x00, (byte)0x00, (byte)0x00, (byte)0x12, (byte)0x00, (byte)0x00, (byte)0x00,
        (byte)0xD0, (byte)0xEE, (byte)0xB5, (byte)0xE7, (byte)0xB3, (byte)0xD8, (byte)0xD7, (byte)0xDC,
        (byte)0xB5, (byte)0xE7, (byte)0xD1, (byte)0xB9, (byte)0xD7, (byte)0xB4, (byte)0xCC, (byte)0xAC,
        (byte)0xA3, (byte)0xA1, (byte)0x00, (byte)0x1C, (byte)0x00, (byte)0x00, (byte)0x00, (byte)0x55,
        (byte)0x50, (byte)0x53, (byte)0xC9, (byte)0xE8, (byte)0xB1, (byte)0xB8, (byte)0x31, (byte)0xA3,
        (byte)0xDB, (byte)0xB0, (byte)0xAC, (byte)0xC4, (byte)0xAC, (byte)0xC9, (byte)0xFA, (byte)0xA3,
        (byte)0xDD, (byte)0xA3, (byte)0xA8, (byte)0x54, (byte)0x44, (byte)0x42, (byte)0x4F, (byte)0x53,
        (byte)0x53, (byte)0xA3, (byte)0xA9, (byte)0x00, (byte)0x04, (byte)0x00, (byte)0x00, (byte)0x00,
        (byte)0x1D, (byte)0x00, (byte)0x00, (byte)0x00, (byte)0xB9, (byte)0xE3, (byte)0xD6, (byte)0xDD,
        (byte)0xB7, (byte)0xAC, (byte)0xD8, (byte)0xAE, (byte)0xC7, (byte)0xE5, (byte)0xBA, (byte)0xD3,
        (byte)0xB6, (byte)0xAB, (byte)0x33, (byte)0xBA, (byte)0xC5, (byte)0x2E, (byte)0xC2, (byte)0xA5,
        (byte)0x35, (byte)0x46, (byte)0x2E, (byte)0xCA, (byte)0xFD, (byte)0xBE, (byte)0xDD, (byte)0x30,
        (byte)0x33, (byte)0x00, (byte)0x00, (byte)0x00, (byte)0x00, (byte)0x00, (byte)0x04, (byte)0x00,
        (byte)0x00, (byte)0x00, (byte)0xB8, (byte)0xE6, (byte)0xBE, (byte)0xAF, (byte)0x00, (byte)0x01,
        (byte)0x00, (byte)0x00, (byte)0x00, (byte)0x98, (byte)0xF5, (byte)0x53, (byte)0x00, (byte)0x03,
        (byte)0x00, (byte)0x00, (byte)0x00, (byte)0x00, (byte)0x00, (byte)0x00, (byte)0x00, (byte)0x00,
        (byte)0x00, (byte)0x00, (byte)0x00, (byte)0x00, (byte)0x00, (byte)0x00, (byte)0x00, (byte)0x00,
        (byte)0x00, (byte)0x00, (byte)0x00, (byte)0x00, (byte)0x00, (byte)0x00, (byte)0x00, (byte)0x00,
        (byte)0x00, (byte)0x00, (byte)0x00, (byte)0x00, (byte)0x00, (byte)0x00, (byte)0x00, (byte)0x00,
        (byte)0x00, (byte)0x00, (byte)0x00, (byte)0x00, (byte)0x00, (byte)0x00, (byte)0x00, (byte)0x00,
        (byte)0x00, (byte)0x00, (byte)0x00
    };
    PAAlarm output = new PAAlarm();
    output.byteToClass(input);
    Assert.assertEquals(182644, output.getDwId());
    Assert.assertEquals("6261.8098.8664.9475", output.getIdList());
    Assert.assertEquals(1, output.getDataType());
    Assert.assertEquals("2022-07-19 19:10:48", output.getRiseTime());
    Assert.assertEquals(1, output.getState());
    Assert.assertEquals(1, output.getDIValue());
    Assert.assertTrue("Zero FValue", (Double.MIN_NORMAL * 10) > output.getFValue());
    Assert.assertEquals("蓄电池总电压状态！", output.getDataObjectName());
    Assert.assertEquals("UPS设备1［艾默生］（TDBOSS）", output.getDeviceName());
    Assert.assertEquals(4, output.getDeviceType());
    Assert.assertEquals("广州番禺清河东3号.楼5F.数据03", output.getStation());
    Assert.assertEquals("告警", output.getNote());
    Assert.assertEquals(1, output.getRise());
    Assert.assertEquals(5502360, output.getLasting());
    Assert.assertEquals(3, output.getAlarmLevel());
    Assert.assertEquals("", output.getEndTim());
    Assert.assertEquals("", output.getConfTime());
    /*
     * $ head -111 mhs/src/test/java/com/github/apuex/pa/mhs/impl/PAAlarmTest.java | tail -16 | sed -e "s/\(\s*input.set\)\([A-Za-z]*\)(\(.*\));/    Assert.assertEquals(\3, output.get\2());/"
     */
  }
}
